ensure disclaim-result prvalue is the address of the given lvalue (OR destroys the lvalue when it is destroyed?)
force prvalue-operator= to be { ~T(); memcpy(this, other); operator disclaim(*this, other); }

make delete return prvalue
    needs to be a disclaiming-delete
        provide a default impl so objects don't have to opt-in

only way to disclaim a parameter is to make the parameter an optional

make sure prvalue forwarding reference gets treated as a pure prvalue?

may require just biting bullet and making prvalue a markable object
    symbol can only be used once?
        what about &&~-qualified member calls - do they see decltype(this) == T&&~* ?
            can we just not &&~-qualify members?